// gap junction with setup_transfer

{load_file("stdrun.hoc")}

begintemplate Cell
public soma, s, vv, tv, pr, gap
create soma
objref s, this, vv, tv, gap
proc init() {
        vv = new Vector()
        tv = new Vector()
    soma {
        L = 10  diam=100/(PI*L)  insert hh
        s = new IClamp(.5)
	gap = new HalfGap(.5)
	gap.r = 200
	tv.record(&t)
	vv.record(&v(.5))
    }
}
proc pr() {local i
        printf("\n%s\n", this)
        for i=0, tv.size-1 {
                printf("%.15g %.15g\n", tv.x[i], vv.x[i])
        }
}
endtemplate Cell

n=2
objref cell[n]
for i=0, n-1 {cell[i] = new Cell(i)}
cell[0].s.dur = .1
cell[0].s.amp = .3

objref pc
pc = new ParallelContext()
for i=0, n-1 {
	cell[i].soma pc.source_var(&cell[i].soma.v(.5), i)
	pc.target_var(cell[(i+1)%2].gap, &cell[(i+1)%2].gap.vgap, i)
}

proc prun() {local i
	pc.setup_transfer()
	hoc_stdout($s1)
	run()
	for i=0, n-1 cell[i].pr()
	hoc_stdout()
}

{
pc.nthread(1)
prun("temp.fixed")
pc.nthread(3,1)
prun("temp.fixed.3")

pc.nthread(1)
cvode.use_long_double(1)
cvode_active(1)
prun("temp.cvode")
pc.nthread(3,1)
prun("temp.cvode.3")
}

{load_file("compare.hoc")}
b = 1
b = b && compare_files("temp.fixed", "temp.fixed.3", 1e-11)
b = b && compare_files("temp.fixed", "t14.fixed.stdout", 1e-10)
if (strcmp(nrnversion(8), "arm64-Darwin") != 0) { // use_long_double(1) same as double
  b = b && (compare_files("temp.cvode", "temp.cvode.3", 1e-11))
}
b = b && (compare_files("temp.cvode", "t14.cvode.stdout", 1e-6) || compare_files("temp.cvode", "t14.cvode.stdout.c3", 1e-6))
